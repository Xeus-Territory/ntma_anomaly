# Provides the env for building the addon for nginx
FROM debian:bullseye-slim AS builder

# Configuration NGINX-Version to Environment
ENV NGINX_VERSION=1.23.4

# Update requirements package for os
RUN apt update && \
    apt install -y \
    build-essential curl git \
    libpcre++-dev zlib1g-dev \
    libtool autoconf \
    libssl-dev libxml2-dev \
    libgeoip-dev liblmdb-dev \
    libyajl-dev libcurl4-openssl-dev \
    libpcre3-dev pkgconf libxslt1-dev \
    libgd-dev automake


# Download and uncompress nginx packages
RUN curl http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz -o /tmp/nginx-${NGINX_VERSION}.tar.gz && \
    tar -xvzf /tmp/nginx-${NGINX_VERSION}.tar.gz --directory /tmp/

# Download and configure modesecurity package
RUN git clone --depth 100 -b v3/master --single-branch https://github.com/SpiderLabs/ModSecurity /tmp/ModSecurity && \
    cd /tmp/ModSecurity && \
    git submodule init && \
    git submodule update  && \
    sh build.sh && \
    ./configure && \
    make && \ 
    make install && \
    cd /

# Download and run configuration build module for nginx with modsecurity
RUN git clone https://github.com/SpiderLabs/ModSecurity-nginx /tmp/ModSecurity-nginx && \
    cd /tmp/nginx-${NGINX_VERSION} && \
    ./configure --with-compat --with-openssl=/usr/include/openssl/ --add-dynamic-module=/tmp/ModSecurity-nginx && \
    make modules && \
    rm -rf Makefile /objs/Makefile

# # Download and configurartion build module for nginx with ngx_dynamic_upstream
# RUN git clone https://github.com/cubicdaiya/ngx_dynamic_upstream.git /tmp/ngx_dynamic_upstream && \
#     cd /tmp/nginx-${NGINX_VERSION} && \
#     ./configure --add-dynamic-module=/tmp/ngx_dynamic_upstream && \
#     make modules

# Download and configuration build module for lua-nginx-module (All modules below will be required for this step)
RUN curl -L https://luajit.org/download/LuaJIT-2.0.5.tar.gz -o /tmp/LuaJIT-2.0.5.tar.gz && \
    curl -L https://github.com/vision5/ngx_devel_kit/archive/refs/tags/v0.3.2.tar.gz -o /tmp/ngx_devel_kit-v0.3.2.tar.gz && \
    curl -L https://github.com/openresty/lua-nginx-module/archive/refs/tags/v0.10.24.tar.gz -o /tmp/lua-nginx-module-v0.10.24.tar.gz && \
    curl -L https://github.com/openresty/stream-lua-nginx-module/archive/refs/tags/v0.0.13.tar.gz -o /tmp/stream-lua-nginx-module-v0.0.13.tar.gz && \
    tar -xzf /tmp/LuaJIT-2.0.5.tar.gz --directory /tmp/ && \
    tar -xzf /tmp/ngx_devel_kit-v0.3.2.tar.gz --directory /tmp && \
    tar -xzf /tmp/lua-nginx-module-v0.10.24.tar.gz --directory /tmp && \
    tar -xzf /tmp/stream-lua-nginx-module-v0.0.13.tar.gz --directory /tmp

# Compile the LUAJIT module
RUN cd /tmp/LuaJIT-2.0.5 && \
    make install

# Compile NGINX with LUAJIT to build ndk (nginx-development-kit) and lua-nginx-module
RUN cd /tmp/nginx-${NGINX_VERSION} && \
    export LUAJIT_LIB=/usr/local/lib && \
    export LUAJIT_INC=/usr/local/include/luajit-2.0 && \
    ./configure --with-compat --with-stream --with-openssl=/usr/include/openssl/ --add-dynamic-module=/tmp/ngx_devel_kit-0.3.2 \
    --with-pcre --with-ld-opt='-lpcre' --add-dynamic-module=/tmp/lua-nginx-module-0.10.24 --add-dynamic-module=/tmp/stream-lua-nginx-module-0.0.13 && \
    make modules && \
    rm -rf Makefile /objs/Makefile

FROM nginx:1.23.4

ENV NGINX_VERSION=1.23.4

# # Copy the module mod-security compile for
COPY --from=builder /tmp/nginx-${NGINX_VERSION}/objs/ngx_http_modsecurity_module.so /etc/nginx/modules

# Copy the module include for lua-nginx-module
COPY --from=builder /tmp/nginx-${NGINX_VERSION}/objs/ndk_http_module.so /etc/nginx/modules
COPY --from=builder /tmp/nginx-${NGINX_VERSION}/objs/ngx_http_lua_module.so /etc/nginx/modules
COPY --from=builder /tmp/nginx-${NGINX_VERSION}/objs/ngx_stream_lua_module.so /etc/nginx/modules

COPY --from=builder /usr/local/include/luajit-2.0 /usr/local/include/luajit-2.0
COPY --from=builder /usr/local/bin  /usr/local/bin
COPY --from=builder /usr/local/lib  /usr/local/lib

# RUN mkdir -p /usr/local/modsecurity

COPY --from=builder /usr/local/modsecurity /usr/local/modsecurity

# # Create a directory for including the modules ModSecurity
RUN mkdir /etc/nginx/modsec

# # Copy the init for mod-security module
COPY --from=builder /tmp/ModSecurity/unicode.mapping /etc/nginx/modsec
COPY --from=builder /tmp/ModSecurity/modsecurity.conf-recommended etc/nginx/modsec/modsecurity.conf

# # The Module is not valid for nginx-version - outdate and deprecation - 
# # should using 1.11.0 version like Makefile https://github.com/cubicdaiya/ngx_dynamic_upstream
# COPY --from=builder /tmp/nginx-${NGINX_VERSION}/objs/ngx_dynamic_upstream_module.so /etc/nginx/modules

# # Install package dependecy
RUN apt update && \
    apt install -y \
    build-essential curl git \
    libpcre++-dev zlib1g-dev \
    libtool autoconf \
    libssl-dev libxml2-dev \
    libgeoip-dev liblmdb-dev \
    libyajl-dev libcurl4-openssl-dev \
    libpcre3-dev pkgconf libxslt1-dev \
    libgd-dev automake


# Install OWASP CRS from github
RUN curl -L  https://github.com/SpiderLabs/owasp-modsecurity-crs/archive/v3.2.0.tar.gz -o /tmp/mod-security.tar.gz && \
    tar -xzf /tmp/mod-security.tar.gz -C /tmp/ && \
    mkdir -p /etc/nginx/modsec/owasp-modsecurity-crs && \
    mv /tmp/owasp-modsecurity-crs-3.2.0 /etc/nginx/modsec/owasp-modsecurity-crs && \
    mv /etc/nginx/modsec/owasp-modsecurity-crs/owasp-modsecurity-crs-3.2.0/crs-setup.conf.example \
       /etc/nginx/modsec/owasp-modsecurity-crs/owasp-modsecurity-crs-3.2.0/crs-setup.conf && \
    mv /etc/nginx/modsec/owasp-modsecurity-crs/owasp-modsecurity-crs-3.2.0/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf.example \
       /etc/nginx/modsec/owasp-modsecurity-crs/owasp-modsecurity-crs-3.2.0/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf

COPY conf/nginx/modsecurity.conf /etc/nginx/modsec

COPY conf/nginx/main.conf /etc/nginx/modsec

ENV LD_LIBRARY_PATH=/usr/local/lib

# COPY conf/nginx/nginx.conf /etc/nginx/nginx.conf

# COPY conf/nginx/nginx-default.conf /etc/nginx/conf.d/default.conf