version: '3'

volumes:
  prometheus_data: {}
  redis_data: {}

services:  
  prometheus:
    image: prom/prometheus:v2.37.6
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 500M
    container_name: prometheus
    restart: unless-stopped
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:9090
      interval: 30s
      timeout: 10s
      retries: 5
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - prometheus_data:/prometheus
      - ./monitoring/prometheus/:/etc/prometheus/
    ports:
      - 9090:9090

  nginxlog_exporter:
    image: quay.io/martinhelmich/prometheus-nginxlog-exporter:v1.10.0
    container_name: nginxlog-exporter
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 200M
    command:
      - '--config-file=/etc/prometheus-nginxlog-exporter.yml'
    volumes:
      - /home/monitoring/NTMA_Anomaly/Infrastructure/docker/log/access.log:/mnt/nginxlogs/access.log
      - ./nginxlog/nginxlog_exporter.yml:/etc/prometheus-nginxlog-exporter.yml
  
  cadvisor:
    image: gcr.io/google-containers/cadvisor:v0.36.0
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 500M
    container_name: cadvisor
    restart: unless-stopped
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:8080/containers/
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
  
  prometheus-kafka-adapter:
    image: telefonica/prometheus-kafka-adapter:1.8.0
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 200M
    container_name: prometheus-kafka-adapter
    environment:
      KAFKA_BROKERS: ${KAFKA}:9092
      KAFKA_TOPIC: prometheus-metrics
    depends_on:
      - kafka

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 200M
    restart: unless-stopped
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - redis

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 500M
        reservations:
          cpus: '0.25'
          memory: 100M
    restart: unless-stopped
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_HOST}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: prometheus-metrics
    depends_on:
      - zookeeper

  redis:
    image: redis:alpine3.17
    container_name: redis
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 200M
        reservations:
          cpus: '0.25'
          memory: 100M
    restart: unless-stopped
    healthcheck:
      test: nc -z localhost 6379 || exit -1
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - redis_data:/data

  kafka-python:
    image: markpage2k1/python-kafka:v1.0.0
    container_name: kafka-python
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 200M
        reservations:
          cpus: '0.25'
          memory: 100M
    restart: unless-stopped
    environment:
      REDIS_HOSTNAME: redis
      REDIS_PORT: 6379
      KAFKA_HOSTNAME: ${KAFKA_HOST}
      KAFKA_PORT: 9092
      KAFKA_TOPIC: prometheus-metrics
    depends_on:
      - kafka